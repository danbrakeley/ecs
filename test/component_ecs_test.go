package test

import (
	"bytes"
	"fmt"

	"github.com/danbrakeley/ecs"
)

//   ___  ___ ___  __ _  ___ _ __
//  / _ \/ __/ __|/ _` |/ _ \ '_ \
// |  __/ (__\__ \ (_| |  __/ | | |
//  \___|\___|___/\__, |\___|_| |_|  v0.4.0
//                |___/
//
// WARNING: This file was generated by ecsgen.
// Any changes made to this file by hand may be lost.
//

func init() {
	ecs.RegisterComponent(EmptyComName, DeserializeEmptyCom)
}

//
// *** EmptyCom ***

// EmptyComName is EmptyCom's ComponentName
const EmptyComName ecs.ComponentName = "TestEmptyCom"

// GetEmptyCom returns any EmptyCom on the given Entity
func GetEmptyCom(e *ecs.Entity) *EmptyCom {
	if c := e.GetComponent(EmptyComName); c != nil {
		return c.(*EmptyCom)
	}
	return nil
}

// GetName is from the Component interface
func (c *EmptyCom) GetName() ecs.ComponentName {
	return EmptyComName
}

// Serialize writes this EmptyCom to the given buffer
func (c *EmptyCom) Serialize(buf *bytes.Buffer) error {
	return ecs.SerializeToJSON(buf, c)
}

//
// EmptyComRef is a EmptyCom reference that can be serialized
type EmptyComRef struct {
	mgr      *ecs.Manager
	parentID string
}

// NewEmptyComRef constructs a EmptyComRef
func NewEmptyComRef(c *EmptyCom) EmptyComRef {
	var r EmptyComRef
	r.Set(c)
	return r
}

// Set updates this reference to point to the given component (or nil)
func (r *EmptyComRef) Set(c *EmptyCom) {
	if c == nil {
		r.mgr = nil
		r.parentID = ""
		return
	}
	r.mgr = c.GetManager()
	r.parentID = c.GetEntityID()
}

// IsNil checks if the component pointer == nil
func (r EmptyComRef) IsNil() bool {
	return len(r.parentID) == 0
}

// Get resolves this reference to a EmptyCom pointer
func (r EmptyComRef) Get() *EmptyCom {
	if r.IsNil() {
		return nil
	}
	return GetEmptyCom(r.mgr.GetEntity(r.parentID))
}

// GetEntity resolves the Entity owning the referenced component
func (r EmptyComRef) GetEntity() *ecs.Entity {
	if r.IsNil() {
		return nil
	}
	return r.mgr.GetEntity(r.parentID)
}

// Serialize just writes out the parent entity id
func (r EmptyComRef) Serialize(buf *bytes.Buffer) error {
	if r.IsNil() {
		buf.WriteString("null")
		return nil
	}
	buf.WriteString(fmt.Sprintf("\"%s\"", r.parentID))
	return nil
}
